{
  "models": [
    {
      "title": "qwen2.5-coder:7b",
      "provider": "ollama",
      "model": "qwen2.5-coder:7b-instruct",
      "baseUrl": "http://localhost:11434"
    }
  ],
  "tabAutocompleteModel": {
    "title": "qwen2.5-coder:7b",
    "provider": "ollama",
    "model": "qwen2.5-coder:7b-instruct"
  },
  "contextProviders": [
    {
      "name": "code",
      "params": {}
    },
    {
      "name": "docs",
      "params": {}
    },
    {
      "name": "diff",
      "params": {}
    },
    {
      "name": "terminal",
      "params": {}
    },
    {
      "name": "problems",
      "params": {}
    },
    {
      "name": "folder",
      "params": {}
    },
    {
      "name": "codebase",
      "params": {
        "include": [
          "**/*.go",
          "**/*.cs",
          "**/*.ts",
          "**/*.js",
          "**/*.py",
          "**/*.cpp",
          "**/*.c",
          "**/*.h",
          "**/*.java",
          "**/*.json",
          "**/*.yml",
          "**/*.sql",
          "**/*.proto"
        ],
        "exclude": [
          "node_modules/**",
          "vendor/**",
          ".git/**",
          "build/**",
          "obj/**",
          "bin/**",
          "*.dll",
          "*.exe",
          "*.log",
          "**/dist/**"
        ],
        "maxFiles": 200, // 增加文件上限以支持大型專案
        "maxCharacters": 120000, // 增加字符限制以涵蓋更多內容
        "nRetrieve": 50, // 提高初步檢索數量
        "nFinal": 15, // 提高最終上下文數量
        "useReranking": true, // 啟用重新排序以提升準確性
        "prioritizeRecent": true, // 優先處理最近修改的文件
        "recursive": true // 確保遞歸掃描所有子目錄
      }
    }
  ],
  "embeddingsProvider": {
    "provider": "transformers.js",
    "model": "xenova/all-MiniLM-L6-v2" // 嵌入模型
  },
  "slashCommands": [
    {
      "name": "share",
      "description": "Scan and summarize the entire @codebase including all subdirectories",
      "template": "Analyze the @codebase, list all detected files across all subdirectories, summarize their purpose, and suggest improvements."
    },
    {
      "name": "cmd",
      "description": "Generate a full API project (Golang/C#) from @codebase",
      "template": "Generate a complete API with CRUD, tests, and docs for {{language}} based on @codebase, including all subdirectories."
    },
    {
      "name": "commit",
      "description": "Generate a git commit message"
    }
  ],
  "systemMessage": "You are a senior backend developer with 15+ years of experience in Golang and C#. Specialize in Clean Architecture, database optimization (PostgreSQL, MongoDB), and DevOps. Analyze the @codebase thoroughly, including all subdirectories, use best practices, and return code in separate files with detailed comments using the latest language versions (Go 1.22, C# 12).",
  "customPromptFile": "prompt-template.md",
  "data": []
}